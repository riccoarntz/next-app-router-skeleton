'use client';

import classNames from 'clsx';
import type { ReactElement, RefObject } from 'react';
import { forwardRef, useRef } from 'react';
import styles from './{{pascalCase componentName}}.module.scss';
import { setupTransitionInTimeline } from './{{pascalCase componentName}}.transitions';
import type { {{pascalCase componentName}}Props, {{pascalCase componentName}}Ref } from './{{pascalCase componentName}}.data';
import {
  useScrollTransition,
} from 'util/react-transition-component';
import {
  defaultCanTransitionIn,
  defaultDisableTriggerInOnScroll,
} from 'util/react-transition-component/types/transitionComponent.types';

export default forwardRef<{{pascalCase componentName}}Ref, {{pascalCase componentName}}Props>((
  {
    disableTriggerInOnScroll = defaultDisableTriggerInOnScroll,
    canTransitionIn = defaultCanTransitionIn,
    data,
    ...props
  }, ref): ReactElement => {
  const localRef = useRef(null);
  const elementRef = (ref || localRef) as RefObject<HTMLDivElement>;

  useScrollTransition({
    scroll: {
      trigger: elementRef,
      canTransitionIn,
      enableInView: false,
      disableTriggerInOnScroll,
    },
    setupOptions: () => ({
      ref: elementRef,
      refs: {
        elementRef,
      },
      setupTransitionInTimeline,
    }),
  });

  return (
    <div ref={elementRef} className={classNames(styles.{{camelCase componentName}}, props.className{{# if isCmsComponent }}, 'block-margin'{{/if}})}>
      {{pascalCase componentName}}
    </div>
  );
});
